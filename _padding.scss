$padding: 0;
$plist: top left bottom right;
$break-vals: xs sm md lg xl wl;

// Pixel value-based padding for directions; Atomic
@while ($padding < 256) {
  // Unidirectional
  @each $direction in $plist {
    .pd-#{$direction}\:#{$padding} {
      padding-#{$direction}: #{$padding}px;
    }
  }

  // All sides
  .pd\:#{$padding} {
    padding: #{$padding}px;
  }

  // Increments the counter
  @if $padding == 0 {
    $padding: $padding + 2;
  } @else {
    $padding: $padding * 2;
  }
}

// Utility padding based on text sizing; must use all sides for even spacing with text
// $padding: 0;
// @while ($padding <= 1) {
//   @each $break-val in $break-vals {
//     .pd- {
//       padding: rem 0;
//     }
//   }
//   $padding: $padding + .125;
// }

.pd {
  &-xs {padding: .125rem 0}
  &-xs-xs {@include media(xs) {padding: .125rem 0}}
  &-sm {padding: .250rem 0}
  &-md {padding: .375rem 0}
  &-lg {padding: .500rem 0}
  &-xl {padding: .625rem 0}
  &-wl {padding: .750rem 0}
}
